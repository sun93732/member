buildscript {
	repositories {
		maven {
			url "${artifactoryBaseUrl}java-tools/"
			credentials {
				username = "${credentialsArtifactoryIdentity}"
				password = "${credentialsArtifactoryPassword}"
			}
		}
		ivy {
			url "${artifactoryBaseUrl}java-tools/"
			credentials {
				username = "${credentialsArtifactoryIdentity}"
				password = "${credentialsArtifactoryPassword}"
			}
		}
	}
	dependencies {
		classpath 'paymark.tools:gradle.ci:+'
	}
}

import nz.paymark.tools.gradle.*
apply plugin: BuildSettingsPlugin

task disableMain(type: DisableMainConfig){}
task modelConf(type: JarConfig){
	confName = 'model'
}
task clientConf(type: JarConfig) {
	confName = 'client'
	srcDirs = sourceSets.model.java.srcDirs
	extendsConfs = [configurations.modelCompile]
}
task serviceConf(type: WarConfig) {
	confName = 'service'
	srcDirs = sourceSets.model.java.srcDirs
	extendsConfs = [configurations.modelCompile]
}

dependencies {

	compile 'paymark.common:shared:0.14.+'
    
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compileOnly 'org.hibernate:hibernate-jpamodelgen:4.3.8.Final'
    
    modelCompile 'com.wordnik:swagger-annotations:1.3.12'
    modelCompile 'paymark.common:database:0.8.+'
    modelCompile 'paymark.common:client:0.7.+'
    modelCompile 'paymark.common:models:0.6.+'
    
    serviceCompile 'paymark.common:webservice:0.20.+'
    serviceCompile 'org.hibernate:hibernate-validator:4.3.2.Final'
    serviceCompile ' mysql:mysql-connector-java:5.1.35'
    
    testCompile 'paymark.tools:java.testing:0.5.+'
    testRuntime 'org.hsqldb:hsqldb:2.3.2'
	testRuntime 'javax.servlet:javax.servlet-api:3.1.0'
}

task generateWithMethods(type: GenerateModelWithMethods) {
	jobs = [
		GeneratorJob.inSitu(file('./src/model/java/nz/paymark/member/model/Member.java')),
		]
}

awsdeployment.enableUploadToS3(project.tasks.serviceWar)
